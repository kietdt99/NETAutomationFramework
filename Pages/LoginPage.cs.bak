using OpenQA.Selenium;
using NETAutomationFramework.Utilities;
using NETAutomationFramework.Config;

namespace NETAutomationFramework.Pages
{
    public class LoginPage : BasePage
    {
        private readonly IWebDriver _driver;

        #region Page Objects
        private readonly By _usernameField = By.Id("username");
        private readonly By _passwordField = By.Id("password");
        private readonly By _loginButton = By.Id("loginBtn");
        private readonly By _errorMessage = By.CssSelector(".error-message");
        #endregion

        public LoginPage(IWebDriver driver) : base(driver)
        {
            _driver = driver;
            OpenPage(TestSettings.Instance.BaseUrl + "/login");
        }

        protected override void OpenPage(string url)
        {
            _driver.Navigate().GoToUrl(url);
        }

        #region Page Actions
        public void Login(string username, string password)
        {
            var usernameInput = _driver.FindElement(_usernameField);
            usernameInput.Clear();
            usernameInput.SendKeys(username);

            var passwordInput = _driver.FindElement(_passwordField);
            passwordInput.Clear();
            passwordInput.SendKeys(password);

            _driver.FindElement(_loginButton).Click();
        }

        public HomePage LoginAndGoToHome(string username, string password)
        {
            Login(username, password);
            return new HomePage(_driver);
        }

        public string GetErrorMessage()
        {
            try
            {
                var errorElement = _driver.FindElement(_errorMessage);
                return errorElement.Text;
            }
            catch (NoSuchElementException)
            {
                return string.Empty;
            }
        }
        #endregion
    }
}